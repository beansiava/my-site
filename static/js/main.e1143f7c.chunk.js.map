{"version":3,"sources":["logo.svg","images/logo.png","images/go.jpg","components/Me.js","components/landing/ExternalNav.js","components/Newsletter.js","components/social.js","components/Navigation.js","views/Landing.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Me","state","react_default","a","createElement","className","Component","ExternalNav","href","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","Newsletter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","alert","preventDefault","collection","add","email","then","docRef","console","log","id","catch","error","_this2","onSubmit","type","name","placeholder","ref","el","React","Social","Navigation","toggleLogo","openNav","closeNav","prevState","document","getElementById","style","width","onClick","social","Landing","onMouseOver","checkbackground","src","logo","components_Me","landing_ExternalNav","components_Navigation","components_Newsletter","styled","div","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1143f7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.64ddc0f5.png\";","module.exports = __webpack_public_path__ + \"static/media/go.7d419a0f.jpg\";","import React, { Component } from 'react';\r\n\r\nimport './../css/global.css';\r\nimport './../css/landing.css';\r\n\r\n\r\nimport go from './../images/go.jpg';\r\n\r\nclass Me extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <div className=\"me\">\r\n            <div className='sean'>\r\n                {/* <img className=\"sean image\" src={go}></img> */}\r\n            </div>\r\n            <div className=\"introContainer\">\r\n                <h1 className=\"introText semibold\">\r\n                    The above picture was taken during my study abroad to\r\n                    Chengdu, China. <br /> <br /> I love this photo because it embodies \r\n                    the value I see in solitude, eastern philosophies, and \r\n                    strategic thinking.\r\n                </h1>\r\n            </div>\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Me;","import React, {Link} from 'react';\r\n\r\nimport '../../css/landing.css';\r\nimport '../../css/global.css';\r\n\r\nconst ExternalNav = () => {\r\n    return ( \r\n        <div>\r\n            <nav className='navContainer'>\r\n                <h1 className='navItem extralight'><a className='aNav' href='https://github.com/beansiava'>Programmer</a></h1>\r\n                <h1 className='navItem extralight'><a className='aNav' href='https://medium.com/@seanbiava'>Writer</a></h1>\r\n                <h1 className='navItem extralight'><a className='aNav' href='https://www.linkedin.com/in/seanbiava/'>Facilitator</a></h1>\r\n            </nav>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ExternalNav;","import React from 'react';\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\"\r\n\r\nimport '../css/landing.css';\r\n\r\nimport firebase from 'firebase';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD0n8b3zVmOSAOPUre1MItKEHTgPLp1oVg\",\r\n    authDomain: \"my-site-e3135.firebaseapp.com\",\r\n    databaseURL: \"https://my-site-e3135.firebaseio.com\",\r\n    projectId: \"my-site-e3135\",\r\n    storageBucket: \"my-site-e3135.appspot.com\",\r\n    messagingSenderId: \"655142939927\",\r\n    appId: \"1:655142939927:web:05845884e493a9d3\"\r\n  };\r\n  // Initialize Firebase\r\n  var fire = firebase.initializeApp(firebaseConfig);\r\n  var db = fire.firestore();\r\n  db.settings({timestampsInSnapshots: true});\r\n\r\n\r\nclass Newsletter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n        \r\n        this.value = ''; // <- clear the input\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        alert('An email was submitted: ' + this.event.value);\r\n        event.preventDefault(); // <- prevent form submit from reloading the page\r\n        /* Send the message to Firebase */\r\n        //fire.database().ref('emails').push( this.event.value );\r\n        db.collection(\"emails\").add({email: this.event.value})\r\n        .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n      }\r\n      render(){\r\n        return ( \r\n            <div className='introText'>\r\n                {/* Still need to create an endpoint for this form.  (Mailchimp subscription) */}\r\n                <form onSubmit={this.handleSubmit}>\r\n                <label className =\"label\">\r\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" ref={ el => this.event = el }/>\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//Query used on mailchimp:::\r\n// \"select\":{\r\n//     \"fields\": []\r\n//   },\r\n//   \"orderBy\": [\r\n//    {\r\n//      \"field\" : {\r\n//        \"fieldPath\": \"email\"\r\n//      },\r\n//      \"direction\": \"ASCENDING\"\r\n//    }\r\n//   ]\r\n \r\nexport default Newsletter;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport '../css/global.css';\r\n\r\nconst Social = () => {\r\n    return (\r\n        <div className='inlineWrapper social'>\r\n            <div className=\"inlineItem instagram hoveritem\"></div>\r\n            <div className=\"inlineItem facebook hoveritem\"></div>\r\n            <div className=\"inlineItem linkedin hoveritem\"></div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Social;","import React, {Component} from 'react';\r\n import '../css/Navigation.css';\r\nimport {logo} from '../logo.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport ExternalNav from '../components/landing/ExternalNav';\r\nimport Social from '../components/social';\r\nimport '../css/landing.css'\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          toggleLogo: true,\r\n        }\r\n        this.toggleLogo = this.toggleLogo.bind(this);\r\n        this.openNav = this.openNav.bind(this);\r\n        this.closeNav = this.closeNav.bind(this);\r\n      }\r\n    \r\n      toggleLogo(event) {\r\n        this.setState((prevState) => ({\r\n          toggleLogo: !prevState.toggleLogo\r\n        }));\r\n      }\r\n    \r\n      openNav() {\r\n        document.getElementById(\"myNav\").style.width = \"100%\";\r\n      }\r\n    \r\n      closeNav() {\r\n        document.getElementById(\"myNav\").style.width = \"0%\";\r\n      }\r\n      render(){\r\n        return (\r\n            <div>\r\n                {/* Move nav img and \"menu\" to their own components */}\r\n                {/* <img src={logo} \r\n                className={this.state.toggleLogo ? 'static-logo' : 'static-logo animated jello'} \r\n                alt=\"logo\"\r\n                onMouseEnter={this.toggleLogo}\r\n                onMouseLeave={this.toggleLogo}\r\n                onClick={this.openNav}\r\n                /> */}\r\n                <div className='extralight secretText'>\r\n                <p\r\n                    className={this.state.toggleLogo ? 'menu-hidden' : 'menu animated bounceInDown' }\r\n                    onClick={this.openNav}\r\n                >.....(?).....</p>\r\n                </div>\r\n                <div id=\"myNav\" className=\"overlay\">\r\n                        <a className=\"closebtn\" onClick={() => this.closeNav()}>&times;</a>\r\n                        <div className=\"overlay-content\">\r\n                        <h1 className='navItem'> \r\n                          Surprise!<br/>\r\n                          You found my social media\r\n                        </h1>\r\n                        {/* <Link to=\"/\" >Home</Link>\r\n                        <Link to=\"/clock\" >Clock (delete later)</Link>\r\n                        <Link to=\"/thoughts\">Thoughts</Link> */}\r\n                        <Social />\r\n                        </div>\r\n                </div>\r\n          </div>\r\n        )\r\n      }\r\n}\r\n\r\n// const Navigation = (props) => (\r\n    \r\n//   <div id=\"myNav\" className=\"overlay\">\r\n//     {/* <a className=\"closebtn\" onClick={() => props.closeNav()}>&times;</a> */}\r\n//     <div className=\"overlay-content\">\r\n//       <Link to=\"/\" >Home</Link>\r\n//       <Link to=\"/clock\" >Vitamin Juice</Link>\r\n//       <a href=\"\">Clothing</a>\r\n//       <a href=\"\">Supplements</a>\r\n//       <a href=\"\">Contact</a>\r\n//     </div>\r\n//   </div>\r\n// );\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\n\r\nimport logo from '../images/logo.png';\r\nimport Me from '../components/Me';\r\nimport ExternalNav from '../components/landing/ExternalNav';\r\nimport Newsletter from '../components/Newsletter';\r\nimport Navigation from '../components/Navigation';\r\n\r\nimport '../css/cursor.scss';\r\nimport '../css/global.css'\r\n\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    checkbackground(){\r\n        //ToDofind place to hold state of each side\r\n        //call swapbackground() onhover iff background is #000000\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className='screenWrapper'>\r\n            <div className='grid-container view'>\r\n                <div className='LeftSide' onMouseOver={this.checkbackground}>\r\n                    <img className='logo div' src={logo}></img>\r\n                    <Me />\r\n                    \r\n                </div>\r\n                <div className='RightSide div' onMouseOver={this.checkbackground}>\r\n                    <ExternalNav/>\r\n                    <div>\r\n                        <p className='resumeText div'>\r\n                            or, if you want to download a boring resume,\r\n                            you can <a className='a' href='../files/Resume_SeanBiava.png'>click here.</a>\r\n                            <br></br><br></br><br></br><br></br><br></br><br></br>\r\n                        </p>\r\n                    </div>\r\n                    <div className='inlineContainer div'>\r\n                        <div className='navContainer div'>\r\n                            <Navigation></Navigation>\r\n                        </div>\r\n                        <div className='blockItem email div'>\r\n                            <h2 className=\"introText div\"> Oh, I also have a Newsletter</h2>\r\n                            <Newsletter />\r\n                        </div>\r\n                        <div className='blockItem'></div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Landing;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Newsletter from './Newsletter';\r\n\r\n// create a 2x3 CSS Grid (NavHeader/Nav, CallToAction/SignUpForm, SMTOAction/Social Media)\r\nconst Grid = styled.div({\r\n\r\n})\r\nconst Row = styled.div({\r\n\r\n})\r\nconst Column = styled.div({\r\n\r\n})\r\n\r\nconst Footer = (props) => {\r\n    return ( \r\n        <Grid>\r\n            <Row>\r\n                <Column></Column>\r\n                <Column></Column>\r\n                <Column></Column>\r\n            </Row>\r\n            <Row>\r\n                <Column></Column>\r\n                <Column><Newsletter/></Column>\r\n                <Column></Column>\r\n            </Row>\r\n        </Grid>  \r\n     );\r\n}\r\n \r\nexport default Footer;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Landing from './views/Landing';\nimport Footer from './components/Footer';\n// Browser Router \nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n} from 'react-router-dom'\n\n\n\n\nclass App extends Component{\n  render(){\n  return (\n    <Router>\n    <div className=\"App\">\n      \n      {/* <Navigation></Navigation>\n      <Proverbs></Proverbs> */}\n    </div>\n    <Switch>\n      <Route exact path=\"/\" component={Landing}></Route>\n    </Switch>\n    \n    </Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}